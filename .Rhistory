# Set path the 1000 genomes reference data.
genome_ref_dir = "~/Downloads/g1000_eur"
if(!file.exists(sprintf("%s/g1000_eur.bed",genome_ref_dir))){
download.file("https://ctg.cncr.nl/software/MAGMA/ref_data/g1000_eur.zip",destfile=sprintf("%s.zip",genome_ref_dir))
unzip(sprintf("%s.zip",genome_ref_dir),exdir=genome_ref_dir)
}
genome_ref_path = sprintf("%s/g1000_eur",genome_ref_dir)
library(MAGMA.Celltyping)
ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
gwases = c("/Users/natske/GWAS_Summary_Statistics/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix","/Users/natske/GWAS_Summary_Statistics/Alzh_IGAP_stage_1.txt")
for(gwas_sumstats_path in gwases){
ctAssocs = calculate_celltype_associations(ctd,gwas_sumstats_path,genome_ref_path=genome_ref_path,specificity_species="human",analysis_name=sprintf("AllanMTG_%s",tag))
plot_celltype_associations(ctAssocs)
}
}
for(tag in c("Merged","IntronsOnly","ExonsOnly","IntronsExons")){
load(sprintf("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/Results-Phase18-TrygveMTG/ctd_AllanMTG_%s_Log.rda",tag))
# Set path the 1000 genomes reference data.
genome_ref_dir = "~/Downloads/g1000_eur"
if(!file.exists(sprintf("%s/g1000_eur.bed",genome_ref_dir))){
download.file("https://ctg.cncr.nl/software/MAGMA/ref_data/g1000_eur.zip",destfile=sprintf("%s.zip",genome_ref_dir))
unzip(sprintf("%s.zip",genome_ref_dir),exdir=genome_ref_dir)
}
genome_ref_path = sprintf("%s/g1000_eur",genome_ref_dir)
library(MAGMA.Celltyping)
ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
gwases = c("/Users/natske/GWAS_Summary_Statistics/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix","/Users/natske/GWAS_Summary_Statistics/Alzh_IGAP_stage_1.txt")
for(gwas_sumstats_path in gwases){
ctAssocs = calculate_celltype_associations(ctd,gwas_sumstats_path,genome_ref_path=genome_ref_path,specificity_species="human",analysis_name=sprintf("AllanMTG_%s",tag))
plot_celltype_associations(ctAssocs)
}
}
getwd()
for(tag in c("Merged","IntronsOnly","ExonsOnly","IntronsExons")){
load(sprintf("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/CellTypeData_AllanMTG_%s_Log.rda",tag))
# Set path the 1000 genomes reference data.
genome_ref_dir = "~/Downloads/g1000_eur"
if(!file.exists(sprintf("%s/g1000_eur.bed",genome_ref_dir))){
download.file("https://ctg.cncr.nl/software/MAGMA/ref_data/g1000_eur.zip",destfile=sprintf("%s.zip",genome_ref_dir))
unzip(sprintf("%s.zip",genome_ref_dir),exdir=genome_ref_dir)
}
genome_ref_path = sprintf("%s/g1000_eur",genome_ref_dir)
library(MAGMA.Celltyping)
ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
gwases = c("/Users/natske/GWAS_Summary_Statistics/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix","/Users/natske/GWAS_Summary_Statistics/Alzh_IGAP_stage_1.txt")
for(gwas_sumstats_path in gwases){
ctAssocs = calculate_celltype_associations(ctd,gwas_sumstats_path,genome_ref_path=genome_ref_path,specificity_species="human",analysis_name=sprintf("AllanMTG_%s",tag))
plot_celltype_associations(ctAssocs)
}
}
gwas_sumstats_path="/Users/natske/GWAS_Summary_Statistics/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix"
?calculate_conditional_celltype_associations
library(MAGMA.Celltyping)
tag = "Merged"
load(sprintf("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/CellTypeData_AllanMTG_%s_Log.rda","Merged"))
ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
plot(hclust(dist(t(ctd[[2]]$quantiles))))
#load(fNames_TrygveLOG[1])
#ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
ctAssocs = calculate_celltype_associations(ctd,gwas_sumstats_path,genome_ref_path=genome_ref_path,specificity_species="human",analysis_name="TrygveLogCond")
plot_celltype_associations(ctAssocs)
ctCond = calculate_conditional_celltype_associations(ctd,gwas_sumstats_path,analysis_name="TrygveMTGCond",upstream_kb=10,downstream_kb=1.5,genome_ref_path,controlledAnnotLevel=2,specificity_species="human")
ctd[[1]]$specificity[1:3,]
ctd[[2]]$specificity[1:3,]
load(sprintf("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/CellTypeData_AllanMTG_%s_Log.rda","Merged"))
ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
ctd[[1]]=ctd[[2]]
plot(hclust(dist(t(ctd[[2]]$quantiles))))
#load(fNames_TrygveLOG[1])
#ctd = prepare.quantile.groups(ctd,specificity_species="human",numberOfBins=40)
ctAssocs = calculate_celltype_associations(ctd,gwas_sumstats_path,genome_ref_path=genome_ref_path,specificity_species="human",analysis_name="TrygveLogCond")
plot_celltype_associations(ctAssocs)
library(MAGMA.Celltyping)
calculate_celltype_associations
calculate_conditional_celltype_associations <- function(ctd,gwas_sumstats_path,analysis_name="MainRun",upstream_kb=10,downstream_kb=1.5,genome_ref_path,controlledAnnotLevel=1,specificity_species="mouse",controlTopNcells=2){
gwas_sumstats_path = path.expand(gwas_sumstats_path)
sumstatsPrefix = sprintf("%s.%sUP.%sDOWN",gwas_sumstats_path,upstream_kb,downstream_kb)
# Check for errors in arguments
check_inputs_to_magma_celltype_analysis(ctd,gwas_sumstats_path,analysis_name,upstream_kb,downstream_kb,genome_ref_path)
# Calculate the baseline associations
ctAssocs = calculate_celltype_associations(ctd,gwas_sumstats_path,genome_ref_path=genome_ref_path,specificity_species=specificity_species)
# Find the cells which are most significant at baseline at controlled annotation level
res = ctAssocs[[controlledAnnotLevel]]$results
res = res[order(res$P),]
signifCells = as.character(res[res$P<(0.05/ctAssocs$total_baseline_tests_performed),"COVAR"])
if(length(signifCells)>controlTopNcells){
signifCells = signifCells[1:controlTopNcells]
}
# If there are no significant cells... then stop
if(length(signifCells)==0){stop("No celltypes reach significance with Q<0.05")}
# Create gene covar file for the controlled for annotation level
controlledCovarFile = create_gene_covar_file(genesOutFile = sprintf("%s.genes.out",sumstatsPrefix),ctd,controlledAnnotLevel,specificity_species=specificity_species)
# Read in the controlled Covar File
controlledCovarData = read.table(controlledCovarFile,stringsAsFactors = FALSE,header=TRUE)
controlledCovarCols = controlledCovarData[,c("entrez",signifCells)]
for(annotLevel in 1:length(ctd)){
count=allRes=0
# First match quantiles to the genes in the genes.out file... then write as the genesCovar file (the input to MAGMA)
genesCovarFile = create_gene_covar_file(genesOutFile = sprintf("%s.genes.out",sumstatsPrefix),ctd,annotLevel,specificity_species=specificity_species)
for(controlFor in signifCells){
if(annotLevel!=controlledAnnotLevel){
genesCovarData = read.table(genesCovarFile,stringsAsFactors = FALSE,header=TRUE)
genesCovarData2 = merge(genesCovarData,controlledCovarCols[,c("entrez",controlFor)])
write.table(genesCovarData2,file=genesCovarFile,quote=FALSE,row.names=FALSE,sep="\t")
}
sumstatsPrefix2 = sprintf("%s.level%s.%sUP.%sDOWN.ControlFor_%s",gwas_sumstats_path,annotLevel,upstream_kb,downstream_kb,controlFor)
#magma_cmd = sprintf("magma --gene-results '%s.genes.raw' --gene-covar '%s' onesided condition=\\\"%s\\\" --out '%s'",gwas_sumstats_path,genesCovarFile,controlFor,sumstatsPrefix2)
magma_cmd = sprintf("magma --gene-results '%s.genes.raw' --gene-covar '%s' onesided condition='%s' --out '%s'",sumstatsPrefix,genesCovarFile,controlFor,sumstatsPrefix2)
print(magma_cmd)
system(magma_cmd)
cond_res = read.table(file=sprintf("%s.gcov.out",sumstatsPrefix2),stringsAsFactors = FALSE,header=TRUE)
cond_res$P = as.numeric(cond_res$P)
cond_res = cond_res[order(cond_res$P,decreasing = TRUE),]
cond_res$CONTROL = controlFor
cond_res$CONTROL_label = controlFor
cond_res$ANNOTLEVEL = annotLevel
count = count + 1
if(count==1){
allRes = cond_res
}else{
allRes = rbind(allRes,cond_res)
}
}
ctAssocs[[annotLevel]]$results = rbind(ctAssocs[[annotLevel]]$results,allRes)
}
# Calculate total number of tests performed
totalTests = 0
for(annotLevel in 1:sum(names(ctAssocs)=="")){
totalTests = totalTests + dim(ctAssocs[[annotLevel]]$results)[1]
}
ctAssocs$total_conditional_tests_performed = totalTests
ctAssocs$gwas_sumstats_path = gwas_sumstats_path
ctAssocs$analysis_name = analysis_name
ctAssocs$upstream_kb = upstream_kb
ctAssocs$downstream_kb = downstream_kb
ctAssocs$genome_ref_path = genome_ref_path
return(ctAssocs)
}
ctCond = calculate_conditional_celltype_associations(ctd,gwas_sumstats_path,analysis_name="TrygveMTGCond",upstream_kb=10,downstream_kb=1.5,genome_ref_path,controlledAnnotLevel=2,specificity_species="human",controlTopNcells=2)
ctCond[1:3,]
ctCond
ctCond[[1]]
plot_celltype_associations(ctCond)
plot_celltype_associations(ctCond)
dev.off()
plot_celltype_associations(ctCond)
?plot_celltype_associations
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
altMod   = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="Inh.L2.5.VIP.TYR",]
magma1=baseline
magma2=altMod
magma1$COVAR
magma1$COVAR==magma2$COVAR
magma1[1:3,]
magma2[1:3,]
intersect(magma1$COVAR)
intersect(magma1$COVAR,magma2$COVAR)
sharedCT=intersect(baseline$COVAR,altMod$COVAR)
rownames(baseline)
rownames(baseline)=baseline$COVAR
rownames(altMod)=altMod$COVAR
magma1=baseline[sharedCT,]
magma2=altMod[sharedCT,]
magma1[1:5,]
magma2[1:5,]
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$BETA_STD+magma2$BETA_STD)
magma1$BETA
magma2$BETA
magma1$BETA_STD+magma2$BETA_STD
sqrt(magma1$BETA_STD+magma2$BETA_STD)
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$BETA_STD^2+magma2$BETA_STD^2)
z
?pnorm
magma1$z=z
magma2$z=z
magma2=magma2[order(magma2$z),]
magma2[1:10,]
magma2=magma2[order(magma2$z,decreasing = TRUE),]
magma2[1:10,]
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$SE^2+magma2$SE^2)
magma2$z=z
magma2=magma2[order(magma2$z),]
magma2[1:10,]
magma2=magma2[order(magma2$z,decreasing = TRUE),]
magma2[1:10,]
pvalue2sided=2*pnorm(-abs(z))
magma2$z=z
magma2=magma2[order(magma2$z),]
magma2$comparisonP = pvalue2sided
magma2=magma2[order(magma2$comparisonP),]
magma2[1:10,]
magma2$BETA_BASELINE=magma1$BETA
magma2[1:10,]
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
altMod   = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="Inh.L2.5.VIP.TYR",]
sharedCT=intersect(baseline$COVAR,altMod$COVAR)
rownames(baseline)=baseline$COVAR
rownames(altMod)=altMod$COVAR
magma1=baseline[sharedCT,]
magma2=altMod[sharedCT,]
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$SE^2+magma2$SE^2)
pvalue2sided=2*pnorm(-abs(z))
magma2$z=z
magma2$comparisonP = pvalue2sided
magma2$BETA_BASELINE=magma1$BETA
magma2=magma2[order(magma2$comparisonP),]
magma2[1:10,]
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
altMod   = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="Inh.L2.5.VIP.TYR",]
sharedCT=intersect(baseline$COVAR,altMod$COVAR)
rownames(baseline)=baseline$COVAR
rownames(altMod)=altMod$COVAR
magma1=baseline[sharedCT,]
magma2=altMod[sharedCT,]
moreSignif = magma2$P<magma1$P
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$SE^2+magma2$SE^2)
pvalue2sided=2*pnorm(-abs(z))
magma2$z=z
magma2$comparisonP = pvalue2sided
magma2$BETA_BASELINE=magma1$BETA
magma2$moreSignif = moreSignif
magma2=magma2[order(magma2$comparisonP),]
magma2[1:3,]
magma2[1:10,]
magma2
#pvalue2sided=2*pnorm(-abs(z))
pvalue2sided=2*pnorm(z)
magma2$z=z
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
altMod   = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="Inh.L2.5.VIP.TYR",]
sharedCT=intersect(baseline$COVAR,altMod$COVAR)
rownames(baseline)=baseline$COVAR
rownames(altMod)=altMod$COVAR
magma1=baseline[sharedCT,]
magma2=altMod[sharedCT,]
moreSignif = magma2$P<magma1$P
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$SE^2+magma2$SE^2)
#pvalue2sided=2*pnorm(-abs(z))
pvalue2sided=2*pnorm(z)
magma2$z=z
magma2$comparisonP = pvalue2sided
magma2$BETA_BASELINE=magma1$BETA
magma2$moreSignif = moreSignif
magma2=magma2[order(magma2$comparisonP),]
magma2[1:10]
magma2[1:10,]
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
altMod   = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="Inh.L2.5.VIP.TYR",]
sharedCT=intersect(baseline$COVAR,altMod$COVAR)
rownames(baseline)=baseline$COVAR
rownames(altMod)=altMod$COVAR
magma1=baseline[sharedCT,]
magma2=altMod[sharedCT,]
moreSignif = magma2$P<magma1$P
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$SE^2+magma2$SE^2)
#pvalue2sided=2*pnorm(-abs(z))
pvalue2sided=2*pnorm(-z)
magma2$z=z
magma2$comparisonP = pvalue2sided
magma2$BETA_BASELINE=magma1$BETA
magma2$moreSignif = moreSignif
magma2=magma2[order(magma2$comparisonP),]
magma2[1:10,]
baseline = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="BASELINE",]
altMod   = ctCond[[1]]$results[ctCond[[1]]$results$CONTROL=="Inh.L2.5.VIP.TYR",]
sharedCT=intersect(baseline$COVAR,altMod$COVAR)
rownames(baseline)=baseline$COVAR
rownames(altMod)=altMod$COVAR
magma1=baseline[sharedCT,]
magma2=altMod[sharedCT,]
moreSignif = magma2$P<magma1$P
z = (magma1$BETA-magma2$BETA)/sqrt(magma1$SE^2+magma2$SE^2)
#pvalue2sided=2*pnorm(-abs(z))
pvalue2sided=2*pnorm(z)
magma2$z=z
magma2$comparisonP = pvalue2sided
magma2$BETA_BASELINE=magma1$BETA
magma2$moreSignif = moreSignif
magma2=magma2[order(magma2$comparisonP),]
magma2[1:10,]
magma2[magma2$P<0.05 & magma2$moreSignif==TRUE,]
#### MERGE MAGMA and LDSC results
load("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/Results-Phase20-TrygveMTG/LDSC_GWAS_Results_stepSize_0.1.Rda")
ls()
all_gwas[1:3,]
unique(all_gwas[1:3,]$file)
# Load LDSC
load("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/Results-Phase20-TrygveMTG/LDSC_GWAS_Results_stepSize_0.1.Rda")
ldscData = all_gwas
unique(all_gwas$gwas)
# Load LDSC
load("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/Results-Phase20-TrygveMTG/LDSC_GWAS_Results_stepSize_0.1.Rda")
ldscData = all_gwas[all_gwas$gwas=="CLOZUK_PGC2noclo.METAL.assoc.dosage.fix",]
ldscData[1:3,]
table(ldscData$file)
ldscData = ldscData[ldscData$file=="celltype_data_AllanMTG_Merged_Log",]
ldscData = ldscData[ldscData$percentile=="1",]
#ldscData = ldscData[ldscData$percentile=="0.9",]
ldscData = ldscData[!is.na(ldscData$file),]
ldscData$Enrichment_p[ldscData$Enrichment>1] <- ldscData$Enrichment_p[ldscData$Enrichment>1]/2
ldscData$Enrichment_p[ldscData$Enrichment<1] <- 1-(ldscData$Enrichment_p[ldscData$Enrichment<1]/2)
ldscData2 = ldscData[,c("celltype","Enrichment_p")]
ldscData2$Method = "LDSC"
colnames(ldscData2) = c("Celltype","P","Method")
ldscData2 = ldscData2[order(ldscData2$P),]
# Load MAGMA
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
# Combine and plot
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
library(ggplot2)
library(cowplot)
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
ldscData2
load("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/Results-Phase20-TrygveMTG/LDSC_GWAS_Results_stepSize_0.1.Rda")
ldscData = all_gwas[all_gwas$gwas=="CLOZUK_PGC2noclo.METAL.assoc.dosage.fix",]
ldscData[1:3,]
sort(table(ldscData$file))
ldscData = ldscData[ldscData$file=="celltype_data_AllanMTG_Merged_Log_Level2",]
ldscData = ldscData[ldscData$percentile=="1",]
#ldscData = ldscData[ldscData$percentile=="0.9",]
ldscData = ldscData[!is.na(ldscData$file),]
ldscData$Enrichment_p[ldscData$Enrichment>1] <- ldscData$Enrichment_p[ldscData$Enrichment>1]/2
ldscData$Enrichment_p[ldscData$Enrichment<1] <- 1-(ldscData$Enrichment_p[ldscData$Enrichment<1]/2)
ldscData2 = ldscData[,c("celltype","Enrichment_p")]
ldscData2$Method = "LDSC"
colnames(ldscData2) = c("Celltype","P","Method")
ldscData2 = ldscData2[order(ldscData2$P),]
# Load MAGMA
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
# Combine and plot
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
library(ggplot2)
library(cowplot)
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
combinedRes$Celltype[grep("TYR",combinedRes$Celltype)]
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
magmaData2$Celltype = gsub(";|\\(|\\)| |\\/|,|+|-","",magmaData2$Celltype)
# Combine and plot
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
combinedRes$Celltype[grep("TYR",combinedRes$Celltype)]
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
magmaData2$Celltype = gsub(";|\\(|\\)| |\\/|,|+|-","",magmaData2$Celltype)
unique(magmaData2$Celltype)
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
magmaData2$Celltype = gsub("\\.","",magmaData2$Celltype)
magmaData2$Celltype = gsub(";|\\(|\\)| |\\/|,|+|-","",magmaData2$Celltype)
unique(magmaData2$Celltype)
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
pdf(file="/Users/natske/Desktop/Trygve/AllanMTG_Combined_LDSC_MAGMA_lvl1.pdf",width=8,height=13)
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
dev.off()
Original=gsub("\\."," ",magmaData2$Celltype)
Alt=gsub(";|\\(|\\)| |\\/|,|+|-","",Original)
nameComp = data.frame(Original=Original,Alt=Alt)
nameComp
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
Original=gsub("\\."," ",magmaData2$Celltype)
Alt=gsub(";|\\(|\\)| |\\/|,|+|-","",Original)
nameComp = data.frame(Original=Original,Alt=Alt)
nameComp
magmaData2$Celltype = gsub("\\.","",magmaData2$Celltype)
magmaData2$Celltype = gsub(";|\\(|\\)| |\\/|,|+|-","",magmaData2$Celltype)
# Combine and plot
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
Original=gsub("\\."," ",magmaData2$Celltype)
Alt=gsub(";|\\(|\\)| |\\/|,|+|-","",Original)
nameComp = data.frame(Celltype=Original,Alt=Alt)
magmaData2$Celltype = gsub("\\.","",magmaData2$Celltype)
magmaData2$Celltype = gsub(";|\\(|\\)| |\\/|,|+|-","",magmaData2$Celltype)
# Combine and plot
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
combinedRes2 = merge(combinedRes,nameComp,by="Celltype")
combinedRes2[1:3,]
combinedRes[1:3,]
nameComp[1:3,]
magmaData = read.table("/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---MTG v2/MAGMA/CLOZUK_PGC2noclo.METAL.assoc.dosage.fix.level2.10UP.1.5DOWN.AllanMTG_Merged.gcov.out",stringsAsFactors = FALSE)
colnames(magmaData) = magmaData[1,]
magmaData = magmaData[-1,]
magmaData2 = magmaData[,c("COVAR","P")]
magmaData2$Method = "MAGMA"
colnames(magmaData2) = c("Celltype","P","Method")
Original=gsub("\\."," ",magmaData2$Celltype)
Alt=gsub(";|\\(|\\)| |\\/|,|+|-","",Original)
nameComp = data.frame(Original=Original,Celltype=Alt)
magmaData2$Celltype = gsub("\\.","",magmaData2$Celltype)
magmaData2$Celltype = gsub(";|\\(|\\)| |\\/|,|+|-","",magmaData2$Celltype)
# Combine and plot
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
combinedRes2 = merge(combinedRes,nameComp,by="Celltype")
combinedRes2[1:3,]
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Original,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
ggplot(combinedRes2)+geom_bar(aes(y=Q,x=Original,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes = merge(combinedRes,nameComp,by="Celltype")
combinedRes$Celltype = combinedRes$Original
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Original,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
combinedRes[1:3,]
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = merge(combinedRes,nameComp,by="Celltype")
combinedRes$Celltype = combinedRes$Original
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
#combinedRes$CT = gsub("cl\\w*_\\w*_(.*)_L.*","\\1",combinedRes$Celltype)
save(combinedRes,file="/Users/natske/Desktop/Trygve/combinedRes_MERGED.Rda")
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Original,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
combinedRes[1:3,]
combinedRes[1:4,]
combinedRes = rbind(ldscData2,magmaData2)
combinedRes$P = as.numeric(combinedRes$P)
combinedRes$Q = p.adjust(combinedRes$P,method="bonferroni")
combinedRes = merge(combinedRes,nameComp,by="Celltype")
combinedRes$Celltype = combinedRes$Original
combinedRes = combinedRes[order(combinedRes$P,decreasing=FALSE),]
combinedRes[1:4,]
combinedRes$Celltype = factor(combinedRes$Celltype,rev(unique(combinedRes$Celltype)))
combinedRes$Celltype
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Original,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
library(ggplot2)
library(cowplot)
pdf(file="/Users/natske/Desktop/Trygve/AllanMTG_Combined_LDSC_MAGMA_lvl1.pdf",width=8,height=13)
ggplot(combinedRes)+geom_bar(aes(y=Q,x=Celltype,fill=Method),stat="identity",position="dodge")+scale_y_log10()+coord_flip()
dev.off()
